#include <bang.h>
__mlu_global__ void hardsigmoid_kernel(float* v1, float* v2, int32_t v3) {
  int32_t c32_4 = 32;
  float v5 = (float)3.000000000e+00;
  float v6 = (float)6.000000000e+00;
  float v7 = (float)0.0e+00;
  float v8 = (float)1.000000000e+00;
  size_t c0_9 = 0;
  size_t c1_10 = 1;
  size_t c32_11 = 32;
  int64_t v12 = taskId;
  int32_t v13 = (int32_t) v12;
  int32_t v14 = (v13) * (c32_4);
  for (size_t v15 = c0_9; v15 < c32_11; v15 += c1_10) {
    int64_t v16 = (int64_t)v15;
    int32_t v17 = (int32_t) v16;
    int32_t v18 = (v14) + (v17);
    size_t v19 = (size_t) v18;
    bool v20 = v18 < v3;
    if (v20) {
      float v21 = v1[v19];
      float v22 = v21 + v5;
      float v23 = v22 / v6;
      bool v24 = v23 < v7;
      float v25;
      if (v24) {
        v25 = v7;
      } else {
        bool v26 = v23 > v8;
        float v27 = (v26) ? (v8) : (v23);
        v25 = v27;
      };
      v2[v19] = v25;
    };
  }
  return;
}




