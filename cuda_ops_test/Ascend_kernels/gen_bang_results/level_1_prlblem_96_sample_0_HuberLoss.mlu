#include <bang.h>
__mlu_global__ void smooth_l1_loss_kernel_launcher(float* v1, float* v2, float* v3, int32_t v4) {
  int32_t c32_5 = 32;
  float v6 = (float)5.000000000e-01;
  float v7 = (float)1.000000000e+00;
  size_t c0_8 = 0;
  size_t c1_9 = 1;
  size_t c32_10 = 32;
  int64_t v11 = taskIdX;
  size_t v12 = (size_t) v11;
  int32_t v13 = (int32_t) v12;
  int32_t v14 = (v13) * (c32_5);
  for (size_t v15 = c0_8; v15 < c32_10; v15 += c1_9) {
    int32_t v16 = (int32_t) v15;
    int32_t v17 = (v14) + (v16);
    size_t v18 = (size_t) v17;
    bool v19 = v17 < v4;
    if (v19) {
      float v20 = v1[v18];
      float v21 = v2[v18];
      float v22 = v20 - v21;
