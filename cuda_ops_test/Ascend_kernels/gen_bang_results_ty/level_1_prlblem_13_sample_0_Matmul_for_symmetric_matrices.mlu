#include <bang.h>
__mlu_global__ void symmetric_matmul_kernel(float* v1, float* v2, float* v3, int32_t v4) {
  float v5 = (float)0.0e+00;
  int32_t c32_6 = 32;
  size_t c18446744073709551615_7 = -1;
  size_t c31_8 = 31;
  size_t c0_9 = 0;
  size_t c1_10 = 1;
  size_t c32_11 = 32;
  __nram__ int8_t v12[1024];
  float* v13 = (float*)v12;
  __nram__ int8_t v14[1024];
  float* v15 = (float*)v14;
  __nram__ int8_t v16[32];
  float* v17 = (float*)v16;
  for (size_t v18 = c0_9; v18 < c32_11; v18 += c1_10) {
    v17[v18] = v5;
  }
  int32_t v19 = (v4) * (c32_6);
  int64_t v20 = taskId;
  size_t v21 = (size_t)v20;
