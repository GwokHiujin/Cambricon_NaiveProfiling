#include <bang.h>
__mlu_global__ void MatMulKernel(float* v1, float* v2, float* v3, int32_t v4, int32_t v5, int32_t v6) {
  int32_t c15_7 = 15;
  bool c0_8 = false;
  int32_t c16_9 = 16;
  float v10 = (float)0.0e+00;
  size_t c18446744073709551615_11 = -1;
  size_t c16_12 = 16;
  size_t c18446744073709551600_13 = -16;
  size_t c0_14 = 0;
  size_t c1_15 = 1;
  size_t c32_16 = 32;
  __nram__ int8_t v17[256];
  float* v18 = (float*)v17;
  __nram__ int8_t v19[256];
  float* v20 = (float*)v19;
  __nram__ int8_t v21[32];
  float* v22 = (float*)v21;
  for (size_t v23 = c0_14; v23 < c32_16; v23 += c1_15) {
    v22[v23] = v10;
  }
  int32_t v24 = (v6) + (c15_7);
  int32_t v25 = (v24) / (c16_9);
