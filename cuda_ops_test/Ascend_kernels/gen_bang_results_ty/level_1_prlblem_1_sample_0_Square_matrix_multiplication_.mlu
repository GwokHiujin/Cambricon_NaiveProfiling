#include <bang.h>
__mlu_global__ void matrix_multiply_kernel(float* v1, float* v2, float* v3, int32_t v4) {
  int32_t c31_5 = 31;
  bool c0_6 = false;
  float v7 = (float)0.0e+00;
  int32_t c32_8 = 32;
  size_t c18446744073709551615_9 = -1;
  size_t c0_10 = 0;
  size_t c1_11 = 1;
  size_t c32_12 = 32;
  __nram__ int8_t v13[1024];
  float* v14 = (float*)v13;
  __nram__ int8_t v15[1024];
  float* v16 = (float*)v15;
  __nram__ int8_t v17[32];
  float* v18 = (float*)v17;
  for (size_t v19 = c0_10; v19 < c32_12; v19 += c1_11) {
    v18[v19] = v7;
  }
  int32_t v20 = (v4) + (c31_5);
  int32_t v21 = (v20) / (c32_8);
