warning: CUDA version 12.1 is only partially supported
warning: CUDA version 12.1 is only partially supported
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump:
0.	Program arguments: /CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist --function=* -cuda-lower -output-intermediate-gpu -scal-rep=0 -raise-scf-to-affine --cuda-gpu-arch=sm_70 -parallel-licm=1 -gpu-kernel-structure-mode=block_thread_noops --enable-buffer-elim=0 -O2 -I /CUDA2BANG/cuda2bang/polygeist/mlir-build/projects/openmp/runtime/src/ -resource-dir=/CUDA2BANG/cuda2bang/polygeist/mlir-build/lib/clang/18/ -I /CUDA2BANG/cuda2bang/polygeist/mlir-build/projects/openmp/runtime/src/ -I /usr/local/cuda/include/ -use-original-gpu-block-size --emit-npu=distribute.mincut -use-my-pass -bang-dump-file=./Ascend_kernels/gen_bang_results_/level_1_prlblem_66_sample_0_conv_standard_3D__asymmetric_input__asymmetric_kernel.mlu ./Ascend_kernels/gen_cuda_kernels/level_1_prlblem_66_sample_0_conv_standard_3D__asymmetric_input__asymmetric_kernel.cu -o level_1_prlblem_66_sample_0_conv_standard_3D__asymmetric_input__asymmetric_kernel.o
 #0 0x0000561794b75bdf llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x3391bdf)
 #1 0x0000561794b733c4 SignalHandler(int) Signals.cpp:0:0
 #2 0x00007f70a7ac8420 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)
 #3 0x0000561792254ffc mlir::Value::operator==(mlir::Value const&) const /CUDA2BANG/cuda2bang/polygeist/llvm-project/mlir/include/mlir/IR/Value.h:118:54
 #4 0x0000561795535946 AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&)::'lambda'(mlir::Operation*, mlir::Operation*)::operator()(mlir::Operation*, mlir::Operation*) const /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:211:11
 #5 0x00005617955361af AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&)::'lambda0'(mlir::Value, bool)::operator()(mlir::Value, bool) const /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:275:39
 #6 0x000056179553c56d std::_Function_handler<mlir::Value (mlir::Value, bool), AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&)::'lambda0'(mlir::Value, bool)>::_M_invoke(std::_Any_data const&, mlir::Value&&, bool&&) /usr/include/c++/9/bits/std_function.h:287:7
 #7 0x00005617955410bc std::function<mlir::Value (mlir::Value, bool)>::operator()(mlir::Value, bool) const /usr/include/c++/9/bits/std_function.h:689:5
 #8 0x0000561795535f6a AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&)::'lambda0'(mlir::Value, bool)::operator()(mlir::Value, bool) const /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:252:36
 #9 0x000056179553c56d std::_Function_handler<mlir::Value (mlir::Value, bool), AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&)::'lambda0'(mlir::Value, bool)>::_M_invoke(std::_Any_data const&, mlir::Value&&, bool&&) /usr/include/c++/9/bits/std_function.h:287:7
#10 0x00005617955410bc std::function<mlir::Value (mlir::Value, bool)>::operator()(mlir::Value, bool) const /usr/include/c++/9/bits/std_function.h:689:5
#11 0x0000561795535f6a AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&)::'lambda0'(mlir::Value, bool)::operator()(mlir::Value, bool) const /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:252:36
#12 0x000056179553c56d std::_Function_handler<mlir::Value (mlir::Value, bool), AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&)::'lambda0'(mlir::Value, bool)>::_M_invoke(std::_Any_data const&, mlir::Value&&, bool&&) /usr/include/c++/9/bits/std_function.h:287:7
#13 0x00005617955410bc std::function<mlir::Value (mlir::Value, bool)>::operator()(mlir::Value, bool) const /usr/include/c++/9/bits/std_function.h:689:5
#14 0x000056179553690e AffineApplyNormalizer::AffineApplyNormalizer(mlir::AffineMap, llvm::ArrayRef<mlir::Value>, mlir::PatternRewriter&, mlir::DominanceInfo&) /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:326:58
#15 0x0000561795538b76 composeAffineMapAndOperands(mlir::AffineMap*, llvm::SmallVectorImpl<mlir::Value>*, mlir::PatternRewriter&, mlir::DominanceInfo&) /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:588:48
#16 0x00005617955391ad fully2ComposeAffineMapAndOperands(mlir::PatternRewriter&, mlir::AffineMap*, llvm::SmallVectorImpl<mlir::Value>*, mlir::DominanceInfo&) /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:641:5
#17 0x000056179553f1f5 MoveLoadToAffine::matchAndRewrite(mlir::memref::LoadOp, mlir::PatternRewriter&) const /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:1263:5
#18 0x0000561794e85c08 mlir::detail::OpOrInterfaceRewritePatternBase<mlir::memref::LoadOp>::matchAndRewrite(mlir::Operation*, mlir::PatternRewriter&) const /CUDA2BANG/cuda2bang/polygeist/llvm-project/mlir/include/mlir/IR/PatternMatch.h:331:3
#19 0x0000561798bb4572 mlir::PatternApplicator::matchAndRewrite(mlir::Operation*, mlir::PatternRewriter&, llvm::function_ref<bool (mlir::Pattern const&)>, llvm::function_ref<void (mlir::Pattern const&)>, llvm::function_ref<mlir::LogicalResult (mlir::Pattern const&)>) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x73d0572)
#20 0x00005617959c9059 (anonymous namespace)::GreedyPatternRewriteDriver::processWorklist() GreedyPatternRewriteDriver.cpp:0:0
#21 0x00005617959d16c0 mlir::applyPatternsAndFoldGreedily(mlir::Region&, mlir::FrozenRewritePatternSet const&, mlir::GreedyRewriteConfig, bool*) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x41ed6c0)
#22 0x0000561794f21b01 mlir::applyPatternsAndFoldGreedily(mlir::Operation*, mlir::FrozenRewritePatternSet const&, mlir::GreedyRewriteConfig, bool*) /CUDA2BANG/cuda2bang/polygeist/llvm-project/mlir/include/mlir/Transforms/GreedyPatternRewriteDriver.h:123:78
#23 0x000056179553bb56 (anonymous namespace)::AffineCFGPass::runOnOperation() /CUDA2BANG/cuda2bang/polygeist/lib/polygeist/Passes/AffineCFG.cpp:1565:76
#24 0x00005617959906a1 mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x41ac6a1)
#25 0x0000561795990c21 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x41acc21)
#26 0x0000561795991ac8 mlir::detail::OpToOpPassAdaptor::runOnOperationImpl(bool) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x41adac8)
#27 0x00005617959907d5 mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x41ac7d5)
#28 0x0000561795990c21 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x41acc21)
#29 0x000056179599179e mlir::PassManager::run(mlir::Operation*) (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0x41ad79e)
#30 0x0000561792242143 main /CUDA2BANG/cuda2bang/polygeist/tools/cgeist/driver.cc:716:0
#31 0x00007f70a742e083 __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:342:3
#32 0x000056179221284e _start (/CUDA2BANG/cuda2bang/polygeist/build/bin/cgeist+0xa2e84e)
