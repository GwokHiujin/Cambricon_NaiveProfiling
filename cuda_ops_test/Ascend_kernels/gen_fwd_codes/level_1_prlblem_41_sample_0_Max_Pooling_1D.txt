
torch::Tensor maxpool1d_cuda_forward(torch::Tensor input, int kernel_size, int stride, int padding, int dilation) {
    const int batch_size = input.size(0);
    const int channels = input.size(1);
    const int input_length = input.size(2);

    int output_length = (input_length + 2 * padding - dilation * (kernel_size -1) -1) / stride +1;

    auto output = torch::empty({batch_size, channels, output_length}, input.options());

    const int threads = 1024;
    const int total_threads = batch_size * channels * output_length;
    const int blocks = (total_threads + threads -1)/threads;

    maxpool1d_cuda_kernel<<<blocks, threads>>>(
        input.data_ptr<float>(),
        output.data_ptr<float>(),
        batch_size,
        channels,
        input_length,
        output_length,
        kernel_size,
        stride,
        padding,
        dilation);
    return output;
}
