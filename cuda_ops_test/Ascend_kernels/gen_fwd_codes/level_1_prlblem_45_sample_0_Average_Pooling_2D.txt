torch::Tensor avg_pool2d_cuda_forward(torch::Tensor input,
                                      int kernel_size,
                                      int stride,
                                      int padding)
{
    auto N = input.size(0);
    auto C = input.size(1);
    auto H_in = input.size(2);
    auto W_in = input.size(3);

    int H_out = (H_in + 2 * padding - kernel_size) / stride + 1;
    int W_out = (W_in + 2 * padding - kernel_size) / stride + 1;

    auto output = torch::zeros({N, C, H_out, W_out}, input.options());

    int total = N * C * H_out * W_out;

    const int threads = 1024;
    const int blocks = (total + threads - 1) / threads;

    avg_pool2d_kernel<<<blocks, threads>>>(
        input.data_ptr<float>(),
        output.data_ptr<float>(),
        N, C, H_in, W_in,
        H_out, W_out,
        kernel_size, stride, padding);

    return output;
}
