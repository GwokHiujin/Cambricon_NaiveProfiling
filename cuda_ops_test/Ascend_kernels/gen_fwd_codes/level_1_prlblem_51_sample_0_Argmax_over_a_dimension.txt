torch::Tensor argmax_dim1_cuda(torch::Tensor input) {
    const auto batch_size = input.size(0);
    const auto dim1 = input.size(1);
    const auto dim2 = input.size(2);

    // Allocate output tensor
    auto output = torch::zeros({batch_size, dim2}, torch::dtype(torch::kInt64).device(input.device()));

    // Launch the CUDA kernel
    dim3 block(256);
    dim3 grid(batch_size, (dim2 + block.x - 1) / block.x);

    argmax_dim1_kernel<<<grid, block>>>(
        input.data_ptr<float>(),
        output.data_ptr<int64_t>(),
        batch_size,
        dim1,
        dim2
    );

    return output;
}
