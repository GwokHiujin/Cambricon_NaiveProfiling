#include <bang.h>
__mlu_global__ void softplus_kernel(float* v1, float* v2, int32_t v3) {
  int32_t c32_4 = 32;
  float v5 = (float)-2.000000000e+01;
  float v6 = (float)2.000000000e+01;
  size_t c0_7 = 0;
  size_t c1_8 = 1;
  size_t c32_9 = 32;
  int64_t v10 = taskId;
  int32_t v11 = (int32_t) v10;
  int32_t v12 = (v11) * (c32_4);
  for (size_t v13 = c0_7; v13 < c32_9; v13 += c1_8) {
    int64_t v14 = (int64_t)v13;
    int32_t v15 = (int32_t) v14;
    int32_t v16 = (v12) + (v15);
    size_t v17 = (size_t) v16;
    bool v18 = v16 < v3;
    if (v18) {
      float v19 = v1[v17];
      bool v20 = v19 > v6;
      float v21;
      if (v20) {
        v21 = v19;
      } else {
        bool v22 = v19 < v5;
        float v23;
        if (v22) {
          v23 = v19;
        } else {
          float v24 = expf(v19);
          float v25 = __nv_log1pf(v24);
          v23 = v25;
        };
        v21 = v23;
      };
      v2[v17] = v21;
    };
  }
  return;
}

float __nv_log1pf() {
}




