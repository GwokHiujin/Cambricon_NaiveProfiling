#include <bang.h>
__mlu_global__ void l1_norm_kernel(float* v1, float* v2, int32_t v3, int32_t v4) {
  size_t c31_5 = 31;
  int32_t c16_6 = 16;
  float v7 = (float)0.0e+00;
  int32_t c2_8 = 2;
  int32_t c0_9 = 0;
  size_t c0_10 = 0;
  size_t c1_11 = 1;
  size_t c32_12 = 32;
  __nram__ int8_t v13[256];
  float* v14 = (float*)v13;
  __nram__ int8_t v15[32];


// ********** Entry Functions **********

// Auto-generated entry function for l1_norm_kernel
void l1_norm_kernel_entry(float* v1, float* v2, int32_t v3, int32_t v4) {
    cnrtQueue_t queue;
    cnrtQueueCreate(&queue);
    cnrtDim3_t dim = {1, 1, 1};
    cnrtFunctionType_t c = CNRT_FUNC_TYPE_BLOCK;
    dim.x = v4 / 32;
    l1_norm_kernel<<<dim, c, queue>>>(v1, v2, v3, v4);
    cnrtQueueSync(queue);
    cnrtQueueDestroy(queue);
}
