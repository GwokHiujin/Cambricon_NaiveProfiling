#include <bang.h>
__mlu_global__ void l2_normalize_kernel(float* v1, float* v2, int32_t v3, int32_t v4) {
  size_t c31_5 = 31;
  int32_t c27_6 = 27;
  int32_t c16_7 = 16;
  float v8 = (float)0.0e+00;
  float v9 = (float)9.999999930e-09;
  size_t c0_10 = 0;
  size_t c1_11 = 1;
  size_t c32_12 = 32;
  __nram__ int8_t v13[32];
  float* v14 = (float*)v13;
  int64_t v15 = taskId;
  int32_t v16 = (int32_t) v15;
  int32_t v17 = (v16) * (v4);
  size_t v18 = (size_t) v17;
  size_t v19 = (size_t) v4;
  for (size_t v20 = c0_10; v20 < c32_12; v20 += c1_11) {
    size_t v21 = (v19) - (v20);
    size_t v22 = (v21) + (c31_5);
    size_t v23 = (v22) / (c32_12);
    float v24;
    float v25 = v8;
    for (size_t v26 = c0_10; v26 < v23; v26 += c1_11) {
      size_t v27 = (v26) * (c32_12);
      size_t v28 = (v27) + (v20);
      size_t v29 = (v28) + (v18);
      float v30 = v1[v29];
      float v31 = v30 * v30;
      float v32 = v25 + v31;
      v25 = v32;
    }
    v24 = v25;;
    v14[v20] = v24;
  }
  size_t v33 = (size_t) c27_6;
  size_t v34 = (c32_12) - (v33);
  for (size_t v35 = c0_10; v35 < v34; v35 += c1_11) {
    int64_t v36 = (int64_t)v35;
    int32_t v37 = (int32_t) v36;
    int32_t v38 = (c16_7) >> (v37);
    for (size_t v39 = c0_10; v39 < c32_12; v39 += c1_11) {
      int64_t v40 = (int64_t)v39;
      int32_t v41 = (int32_t) v40;
      bool v42 = v41 < v38;
      if (v42) {
        int32_t v43 = (v41) + (v38);
        size_t v44 = (size_t) v43;
        float v45 = v14[v44];
        float v46 = v14[v39];
        float v47 = v46 + v45;
        v14[v39] = v47;
      };
    };
  }
  float v48 = v14[c0_10];
  float v49 = v48 + v9;
  float v50 = sqrtf(v49);
  for (size_t v51 = c0_10; v51 < c32_12; v51 += c1_11) {
    size_t v52 = (v19) - (v51);
    size_t v53 = (v52) + (c31_5);
    size_t v54 = (v53) / (c32_12);
    for (size_t v55 = c0_10; v55 < v54; v55 += c1_11) {
      size_t v56 = (v55) * (c32_12);
      size_t v57 = (v56) + (v51);
      size_t v58 = (v57) + (v18);
      float v59 = v1[v58];
      float v60 = v59 / v50;
      v2[v58] = v60;
    };
  }
  return;
}






// ********** Entry Functions **********

// Auto-generated entry function for l2_normalize_kernel
void l2_normalize_kernel_entry(float* v1, float* v2, int32_t v3, int32_t v4, int size) {
    cnrtQueue_t queue;
    cnrtQueueCreate(&queue);
    cnrtDim3_t dim = {1, 1, 1};
    cnrtFunctionType_t c = CNRT_FUNC_TYPE_BLOCK;
    dim.x = size / 32;
    l2_normalize_kernel<<<dim, c, queue>>>(v1, v2, v3, v4, size);
    cnrtQueueSync(queue);
    cnrtQueueDestroy(queue);
}
