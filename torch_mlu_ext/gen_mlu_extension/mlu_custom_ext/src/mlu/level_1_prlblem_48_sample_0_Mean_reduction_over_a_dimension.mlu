#include <bang.h>
__mlu_global__ void mean_reduction_kernel(float* v1, float* v2, int32_t v3, int32_t v4, int32_t v5) {
  int32_t c32_6 = 32;
  float v7 = (float)0.0e+00;
  size_t c0_8 = 0;
  size_t c1_9 = 1;
  size_t c32_10 = 32;
  size_t v11 = (size_t) v5;
  size_t v12 = (size_t) v3;
  int64_t v13 = taskId;
  int32_t v14 = (int32_t) v13;
  int32_t v15 = (v14) * (c32_6);
  int32_t v16 = (v4) * (v5);


// ********** Entry Functions **********

// Auto-generated entry function for mean_reduction_kernel
void mean_reduction_kernel_entry(float* v1, float* v2, int32_t v3, int32_t v4, int32_t v5) {
    cnrtQueue_t queue;
    cnrtQueueCreate(&queue);
    cnrtDim3_t dim = {1, 1, 1};
    cnrtFunctionType_t c = CNRT_FUNC_TYPE_BLOCK;
    dim.x = v5 / 32;
    mean_reduction_kernel<<<dim, c, queue>>>(v1, v2, v3, v4, v5);
    cnrtQueueSync(queue);
    cnrtQueueDestroy(queue);
}
